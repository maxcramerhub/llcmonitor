# Generated by Django 4.2.18 on 2025-03-05 05:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                ("class_id", models.AutoField(primary_key=True, serialize=False)),
                ("class_name", models.CharField(max_length=200)),
                ("instructor", models.CharField(max_length=200)),
                ("semester", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "Class",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Faculty",
            fields=[
                ("faculty_id", models.AutoField(primary_key=True, serialize=False)),
                ("fname", models.CharField(max_length=100)),
                ("lname", models.CharField(max_length=100)),
                ("password", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "Faculty",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Reviews",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                ("written_review", models.TextField()),
            ],
            options={
                "db_table": "Reviews",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                ("schedule_id", models.AutoField(primary_key=True, serialize=False)),
                ("day", models.CharField(max_length=50)),
                ("week", models.CharField(max_length=50)),
                ("month", models.CharField(max_length=50)),
                ("year", models.IntegerField()),
                ("semester", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "Schedule",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Students",
            fields=[
                ("student_id", models.AutoField(primary_key=True, serialize=False)),
                ("fname", models.CharField(max_length=100)),
                ("lname", models.CharField(max_length=100)),
                ("username", models.CharField(max_length=100, unique=True)),
                ("password", models.CharField(max_length=255)),
                ("western_id", models.IntegerField(unique=True)),
            ],
            options={
                "db_table": "Students",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Tutor",
            fields=[
                ("tutor_id", models.AutoField(primary_key=True, serialize=False)),
                ("fname", models.CharField(max_length=100)),
                ("lname", models.CharField(max_length=100)),
                ("western_id", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "Tutor",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="TutorSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.schedule",
                    ),
                ),
                (
                    "tutor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="monitor.tutor"
                    ),
                ),
            ],
            options={
                "db_table": "Tutor_Schedule",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="TutorReviews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_review", models.DateTimeField(blank=True, null=True)),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.reviews",
                    ),
                ),
                (
                    "tutor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="monitor.tutor"
                    ),
                ),
            ],
            options={
                "db_table": "Tutor_Reviews",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="StudentCheckin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("checkin_time", models.DateTimeField(blank=True, null=True)),
                ("checkout_time", models.DateTimeField(blank=True, null=True)),
                (
                    "class_field",
                    models.ForeignKey(
                        db_column="class_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.class",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.students",
                    ),
                ),
            ],
            options={
                "db_table": "Student_CheckIN",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="schedule",
            name="tutor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="schedules",
                to="monitor.tutor",
            ),
        ),
        migrations.AddField(
            model_name="reviews",
            name="tutor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to="monitor.tutor",
            ),
        ),
        migrations.CreateModel(
            name="Checkin",
            fields=[
                ("checkin_id", models.AutoField(primary_key=True, serialize=False)),
                ("checkin_time", models.DateTimeField(blank=True, null=True)),
                ("checkout_time", models.DateTimeField(blank=True, null=True)),
                (
                    "class_field",
                    models.ForeignKey(
                        db_column="class_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.class",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.students",
                    ),
                ),
            ],
            options={
                "db_table": "CheckIn",
                "managed": True,
            },
        ),
    ]
